name: Deploy to GoormIDE

on:
  push:
    branches:
      - main
jobs:
  build:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_DB: byoadb
          POSTGRES_USER: ${{secrets.POSTGRES_LOCAL_USER}}
          POSTGRES_PASSWORD: ${{secrets.POSTGRES_LOCAL_USER_PASSWORD}}
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          token: ${{secrets.TOKEN_GITHUB}}
          submodules: recursive

      - name: Create testdb database
        run: |
          sudo apt-get -yqq install postgresql
          psql -h localhost -c 'CREATE DATABASE testdb;'
        env:
          POSTGRES_USER: ${{secrets.POSTGRES_LOCAL_USER}}
          PGPASSWORD: ${{secrets.POSTGRES_LOCAL_USER_PASSWORD}}

      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: Use MongoDB
        uses: supercharge/mongodb-github-action@1.10.0
        with:
          mongodb-version: 4.4

      - name: Setup Java JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'corretto'
          java-version: 17

      - name: Git Submodule Update
        run: |
          git submodule update --remote --recursive

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew
        shell: bash

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2

      - name: Build with Gradle
        id: buildWithGradle
        run: ./gradlew clean build
        shell: bash

      - name: Make Zip File
        run: |
          mkdir content
          mv ./build/libs/*.jar ./content/
          zip buildFile.zip ./appspec.yml ./content/*.jar ./scripts/deploy.sh
        shell:
          bash

      - name: Upload Builded zip File Artifact
        uses: actions/upload-artifact@v3
        with:
          name: builded-zip-artifact
          path: buildFile.zip

      - name: Upload Report Artifact When Build Failed
        if: ${{ failure() && steps.buildWithGradle.conclusion == 'failure' }}
        uses: actions/upload-artifact@v3
        with:
          name: report-artifact
          path: ./build/reports/

  copyZip:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download Builded zip File Artifact
        uses: actions/download-artifact@v3
        with:
          name: builded-zip-artifact

      - name: Copy Zip File to Goorm
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.GOORM_HOST }}
          username: ${{ secrets.GOORM_USERNAME }}
          password: ${{ secrets.GOORM_PASSWORD }}
          port: ${{ secrets.GOORM_PORT }}
          source: "buildFile.zip"
          target: '/workspace/byoa'

  execute:
    needs: copyZip
    runs-on: ubuntu-latest
    steps:
      - name: Unzip and Execute on Goorm
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.GOORM_HOST }}
          username: ${{ secrets.GOORM_USERNAME }}
          password: ${{ secrets.GOORM_PASSWORD }}
          port: ${{ secrets.GOORM_PORT }}
          script: |
            cd /workspace/byoa
            unzip -o buildFile.zip -d /workspace/byoa/capstone
            rm buildFile.zip
            sudo chmod +x ./capstone/scripts/deploy.sh
            sudo ./capstone/scripts/deploy.sh
